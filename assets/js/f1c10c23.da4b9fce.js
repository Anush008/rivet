"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3300],{6593:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var n=r(1644);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(m,c(c({ref:t},p),{},{components:r})):n.createElement(m,c({ref:t},p))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=f;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[d]="string"==typeof e?e:o,c[1]=i;for(var s=2;s<a;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},6967:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(373),o=(r(1644),r(6593));const a={title:"Text"},c="Text Node",i={unversionedId:"node-reference/text",id:"node-reference/text",title:"Text",description:"Text nodes are string constants used to pass data to other nodes.",source:"@site/docs/node-reference/text.mdx",sourceDirName:"node-reference",slug:"/node-reference/text",permalink:"/docs/node-reference/text",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/node-reference/text.mdx",tags:[],version:"current",frontMatter:{title:"Text"},sidebar:"nodeReference",previous:{title:"All Nodes",permalink:"/docs/node-reference/all-nodes"},next:{title:"Prompt",permalink:"/docs/node-reference/prompt"}},l={},s=[{value:"Config Data",id:"config-data",level:2},{value:"Ports",id:"ports",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"text-node"},"Text Node"),(0,o.kt)("p",null,"Text nodes are string constants used to pass data to other nodes."),(0,o.kt)("h2",{id:"config-data"},"Config Data"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"text - The text to pass to other nodes.")),(0,o.kt)("h2",{id:"ports"},"Ports"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"output - Outputs the text to other nodes.")))}u.isMDXComponent=!0}}]);