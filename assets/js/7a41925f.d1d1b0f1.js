"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8650],{6593:(e,r,t)=>{t.d(r,{Zo:()=>s,kt:()=>v});var n=t(1644);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function p(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=n.createContext({}),c=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},s=function(e){var r=c(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=c(t),f=a,v=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return t?n.createElement(v,o(o({ref:r},s),{},{components:t})):n.createElement(v,o({ref:r},s))}));function v(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=f;var p={};for(var l in r)hasOwnProperty.call(r,l)&&(p[l]=r[l]);p.originalType=e,p[u]="string"==typeof e?e:a,o[1]=p;for(var c=2;c<i;c++)o[c]=t[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},3631:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var n=t(373),a=(t(1644),t(6593));const i={},o="API Overview",p={unversionedId:"api-reference/node/overview",id:"api-reference/node/overview",title:"API Overview",description:"This is the API overview for the @ironclad/rivet-node Node.js library. Each of the exports in the api.ts file is documented in its own page, as linked below:",source:"@site/docs/api-reference/node/overview.mdx",sourceDirName:"api-reference/node",slug:"/api-reference/node/overview",permalink:"/docs/api-reference/node/overview",draft:!1,editUrl:"https://github.com/ironclad/rivet/tree/main/packages/docs/docs/api-reference/node/overview.mdx",tags:[],version:"current",frontMatter:{},sidebar:"apiReference",previous:{title:"Remote Debugging with Rivet",permalink:"/docs/api-reference/remote-debugging"},next:{title:"createProcessor",permalink:"/docs/api-reference/node/createProcessor"}},l={},c=[{value:"Core",id:"core",level:2},{value:"Functions",id:"functions",level:2},{value:"Types",id:"types",level:2}],s={toc:c},u="wrapper";function d(e){let{components:r,...t}=e;return(0,a.kt)(u,(0,n.Z)({},s,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"api-overview"},"API Overview"),(0,a.kt)("p",null,"This is the API overview for the ",(0,a.kt)("inlineCode",{parentName:"p"},"@ironclad/rivet-node")," Node.js library. Each of the exports in the ",(0,a.kt)("inlineCode",{parentName:"p"},"api.ts")," file is documented in its own page, as linked below:"),(0,a.kt)("h2",{id:"core"},"Core"),(0,a.kt)("p",null,"Every type and method exported from ",(0,a.kt)("inlineCode",{parentName:"p"},"@ironclad/rivet-core")," is re-exported from ",(0,a.kt)("inlineCode",{parentName:"p"},"@ironclad/rivet-node")," for convenience. See the ",(0,a.kt)("a",{parentName:"p",href:"../core/overview"},"core API overview")," for more information."),(0,a.kt)("p",null,"Sure, I can help you with that. Here's how you could update the API overview:"),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./loadProjectFromFile"},"loadProjectFromFile"),": This function loads a project from a given file path."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./loadProjectFromString"},"loadProjectFromString"),": This function loads a project from a string content."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./runGraphInFile"},"runGraphInFile"),": This function runs a graph in a file with the provided options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./createProcessor"},"createProcessor"),": This function creates a processor for a given project with specific options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./runGraph"},"runGraph"),": This function runs a graph for a given project with specific options."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./startDebuggerServer"},"startDebuggerServer"),": This function starts a debugger server with the provided options.")),(0,a.kt)("h2",{id:"types"},"Types"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./LooseDataValue"},"LooseDataValue"),": This type represents a loose data value that can be a ",(0,a.kt)("inlineCode",{parentName:"li"},"DataValue"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"string"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"number"),", or ",(0,a.kt)("inlineCode",{parentName:"li"},"boolean"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./RunGraphOptions"},"RunGraphOptions"),": This type represents the options that can be provided when running a graph."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./RivetDebuggerServer"},"RivetDebuggerServer"),": This type represents a debugger server instance with a WebSocketServer and several methods for handling events and processor interaction."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"./DebuggerEvents"},"DebuggerEvents"),": This type represents the events that can be emitted by the debugger server.")),(0,a.kt)("p",null,"Please visit each page for detailed information on each export, including usage examples and type definitions."))}d.isMDXComponent=!0}}]);